/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, ViewEncapsulation } from '@angular/core';
import { SideNavigationLinkDirective } from '../side-navigation-link/side-navigation-link.directive';
import { SideNavigationSublistDirective } from '../side-navigation-sublist/side-navigation-sublist.directive';
/**
 * The component that represents a navigation group.
 * ```html
 * <fd-side-nav>
 *    <fd-side-nav-group>
 *        <h1 fd-side-nav-title>Group Name</h1>
 *          <div fd-side-nav-list>
 *             <fd-side-nav-item>
 *                <a fd-side-nav-link [attr.href]="'#'">Link Item</a>
 *             </fd-side-nav-item>
 *          </div>>
 *    </fd-side-nav-group>
 * </fd-side-nav>
 * ```
 */
export class SideNavigationItemComponent {
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        if (this.linkElement && this.subListElement) {
            /** After view content check if there is flag with opened true */
            this.subListElement.subListIsOpenChange(this.linkElement.sublistIsOpen);
            this.subListOpenChanged$ = this.linkElement.onSubListOpenChange.subscribe((/**
             * @param {?} isOpen
             * @return {?}
             */
            isOpen => {
                this.subListElement.subListIsOpenChange(isOpen);
            }));
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.subListOpenChanged$) {
            this.subListOpenChanged$.unsubscribe();
        }
    }
}
SideNavigationItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-side-nav-item',
                template: "<div class=\"fd-side-nav__item\">\n  <ng-content select=\"[fd-side-nav-link]\"></ng-content>\n  <ng-content select=\"[fd-side-nav-sublist]\"></ng-content>\n</div>\n",
                encapsulation: ViewEncapsulation.None
            }] }
];
SideNavigationItemComponent.propDecorators = {
    linkElement: [{ type: ContentChild, args: [SideNavigationLinkDirective,] }],
    subListElement: [{ type: ContentChild, args: [SideNavigationSublistDirective,] }]
};
if (false) {
    /** @type {?} */
    SideNavigationItemComponent.prototype.linkElement;
    /** @type {?} */
    SideNavigationItemComponent.prototype.subListElement;
    /**
     * \@Hidden
     * @type {?}
     */
    SideNavigationItemComponent.prototype.subListOpenChanged$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZS1uYXZpZ2F0aW9uLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vZnVuZGFtZW50YWwtbmd4LyIsInNvdXJjZXMiOlsibGliL3NpZGUtbmF2aWdhdGlvbi9zaWRlLW5hdmlnYXRpb24taXRlbS9zaWRlLW5hdmlnYXRpb24taXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBbUMsU0FBUyxFQUFFLFlBQVksRUFBb0IsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUgsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFFckcsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sOERBQThELENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQjlHLE1BQU0sT0FBTywyQkFBMkI7Ozs7SUFPN0Isa0JBQWtCO1FBQ3JCLElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ3pDLGlFQUFpRTtZQUNqRSxJQUFJLENBQUMsY0FBYyxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDeEUsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsbUJBQW1CLENBQUMsU0FBUzs7OztZQUFDLE1BQU0sQ0FBQyxFQUFFO2dCQUMvRSxJQUFJLENBQUMsY0FBYyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3BELENBQUMsRUFBQyxDQUFDO1NBQ047SUFDTCxDQUFDOzs7O0lBRUQsV0FBVztRQUNQLElBQUksSUFBSSxDQUFDLG1CQUFtQixFQUFFO1lBQzFCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUMxQztJQUNMLENBQUM7OztZQTFCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsZ0xBQW9EO2dCQUNwRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTthQUN4Qzs7OzBCQUVJLFlBQVksU0FBQywyQkFBMkI7NkJBQ3hDLFlBQVksU0FBQyw4QkFBOEI7Ozs7SUFENUMsa0RBQW9GOztJQUNwRixxREFBNkY7Ozs7O0lBRzdGLDBEQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgQ29udGVudENoaWxkLCBJbnB1dCwgT25EZXN0cm95LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2lkZU5hdmlnYXRpb25MaW5rRGlyZWN0aXZlIH0gZnJvbSAnLi4vc2lkZS1uYXZpZ2F0aW9uLWxpbmsvc2lkZS1uYXZpZ2F0aW9uLWxpbmsuZGlyZWN0aXZlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgU2lkZU5hdmlnYXRpb25TdWJsaXN0RGlyZWN0aXZlIH0gZnJvbSAnLi4vc2lkZS1uYXZpZ2F0aW9uLXN1Ymxpc3Qvc2lkZS1uYXZpZ2F0aW9uLXN1Ymxpc3QuZGlyZWN0aXZlJztcblxuLyoqXG4gKiBUaGUgY29tcG9uZW50IHRoYXQgcmVwcmVzZW50cyBhIG5hdmlnYXRpb24gZ3JvdXAuXG4gKiBgYGBodG1sXG4gKiA8ZmQtc2lkZS1uYXY+XG4gKiAgICA8ZmQtc2lkZS1uYXYtZ3JvdXA+XG4gKiAgICAgICAgPGgxIGZkLXNpZGUtbmF2LXRpdGxlPkdyb3VwIE5hbWU8L2gxPlxuICogICAgICAgICAgPGRpdiBmZC1zaWRlLW5hdi1saXN0PlxuICogICAgICAgICAgICAgPGZkLXNpZGUtbmF2LWl0ZW0+XG4gKiAgICAgICAgICAgICAgICA8YSBmZC1zaWRlLW5hdi1saW5rIFthdHRyLmhyZWZdPVwiJyMnXCI+TGluayBJdGVtPC9hPlxuICogICAgICAgICAgICAgPC9mZC1zaWRlLW5hdi1pdGVtPlxuICogICAgICAgICAgPC9kaXY+PlxuICogICAgPC9mZC1zaWRlLW5hdi1ncm91cD5cbiAqIDwvZmQtc2lkZS1uYXY+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdmZC1zaWRlLW5hdi1pdGVtJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vc2lkZS1uYXZpZ2F0aW9uLWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgU2lkZU5hdmlnYXRpb25JdGVtQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95IHtcbiAgICBAQ29udGVudENoaWxkKFNpZGVOYXZpZ2F0aW9uTGlua0RpcmVjdGl2ZSkgbGlua0VsZW1lbnQ6IFNpZGVOYXZpZ2F0aW9uTGlua0RpcmVjdGl2ZTtcbiAgICBAQ29udGVudENoaWxkKFNpZGVOYXZpZ2F0aW9uU3VibGlzdERpcmVjdGl2ZSkgc3ViTGlzdEVsZW1lbnQ6IFNpZGVOYXZpZ2F0aW9uU3VibGlzdERpcmVjdGl2ZTtcblxuICAgIC8qKiBASGlkZGVuICovXG4gICAgc3ViTGlzdE9wZW5DaGFuZ2VkJDogU3Vic2NyaXB0aW9uO1xuXG4gICAgcHVibGljIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMubGlua0VsZW1lbnQgJiYgdGhpcy5zdWJMaXN0RWxlbWVudCkge1xuICAgICAgICAgICAgLyoqIEFmdGVyIHZpZXcgY29udGVudCBjaGVjayBpZiB0aGVyZSBpcyBmbGFnIHdpdGggb3BlbmVkIHRydWUgKi9cbiAgICAgICAgICAgIHRoaXMuc3ViTGlzdEVsZW1lbnQuc3ViTGlzdElzT3BlbkNoYW5nZSh0aGlzLmxpbmtFbGVtZW50LnN1Ymxpc3RJc09wZW4pO1xuICAgICAgICAgICAgdGhpcy5zdWJMaXN0T3BlbkNoYW5nZWQkID0gdGhpcy5saW5rRWxlbWVudC5vblN1Ykxpc3RPcGVuQ2hhbmdlLnN1YnNjcmliZShpc09wZW4gPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc3ViTGlzdEVsZW1lbnQuc3ViTGlzdElzT3BlbkNoYW5nZShpc09wZW4pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuc3ViTGlzdE9wZW5DaGFuZ2VkJCkge1xuICAgICAgICAgICAgdGhpcy5zdWJMaXN0T3BlbkNoYW5nZWQkLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==