/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, forwardRef, HostBinding, Input, ViewChild, ViewEncapsulation } from '@angular/core';
import { TimeObject } from '../time/time-object';
import { TimeComponent } from '../time/time.component';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { TimeFormatParser } from './format/time-parser';
export class TimePickerComponent {
    /**
     * @hidden
     * @param {?} cd
     * @param {?} timeAdapter
     */
    constructor(cd, timeAdapter) {
        this.cd = cd;
        this.timeAdapter = timeAdapter;
        /**
         * @hidden
         */
        this.timepickerclass = true;
        /**
         * \@Input An object that contains three integer properties: 'hour' (ranging from 0 to 23),
         * 'minute' (ranging from 0 to 59), and 'second' (ranging from 0 to 59). This is the model the component consumes. Example:
         *
         * ```json
         * { hour: 12, minute: 0, second: 0 }
         * ```
         */
        this.time = { hour: 0, minute: 0, second: 0 };
        /**
         * \@Input Uses compact time picker.
         */
        this.compact = false;
        /**
         * \@Input When set to true, uses the 24 hour clock (hours ranging from 0 to 23)
         * and does not display a period control.
         */
        this.meridian = false;
        /**
         * \@Input When set to false, hides the buttons that increment and decrement the corresponding input.
         */
        this.spinners = true;
        /**
         * \@Input When set to false, hides the input for seconds.
         */
        this.displaySeconds = true;
        /**
         * \@Input When set to false, hides the input for minutes.
         */
        this.displayMinutes = true;
        /**
         * \@Input When set to false, hides the input for hours.
         */
        this.displayHours = true;
        /**
         * Whether to perform visual validation on the picker input.
         */
        this.validate = true;
        /**
         * Aria label for the time picker input.
         */
        this.timePickerInputLabel = 'Time picker input';
        /**
         * Whether a null input is considered valid.
         */
        this.allowNull = true;
        /**
         * @hidden Whether the input time is valid. Internal use.
         */
        this.isInvalidTimeInput = false;
        /**
         * @hidden
         */
        this.onChange = (/**
         * @return {?}
         */
        () => { });
        /**
         * @hidden
         */
        this.onTouched = (/**
         * @return {?}
         */
        () => { });
    }
    /**
     * @hidden
     * @return {?}
     */
    ngOnInit() {
        this.placeholder = this.getPlaceholder();
    }
    /**
     * Returns the current value of the time input.
     * @return {?}
     */
    getTime() {
        return this.time;
    }
    /**
     * @hidden
     * @return {?}
     */
    getFormattedTime() {
        /** @type {?} */
        const formattedTime = this.timeAdapter.format(this.time, this.meridian);
        return formattedTime !== undefined ? formattedTime : '';
    }
    /**
     * @hidden
     * @param {?} timeFromInput
     * @return {?}
     */
    timeInputChanged(timeFromInput) {
        /** @type {?} */
        const time = this.timeAdapter.parse(timeFromInput, this.displaySeconds, this.meridian);
        if (time) {
            this.isInvalidTimeInput = false;
            this.child.setDisplayedHour();
            this.time = Object.assign(this.time, time);
            this.onChange(time);
        }
        else {
            if (this.allowNull && timeFromInput === '') {
                this.isInvalidTimeInput = false;
                this.child.setDisplayedHour();
                this.onChange({ hour: null, minutes: null, seconds: null });
            }
            else {
                this.isInvalidTimeInput = true;
            }
        }
    }
    /**
     * @hidden
     * @param {?} $event
     * @return {?}
     */
    inputGroupClicked($event) {
        if (!this.isOpen && !this.disabled) {
            $event.stopPropagation();
            this.isOpen = true;
        }
    }
    /**
     * @hidden
     * @return {?}
     */
    onFocusHandler() {
        if (!this.isOpen) {
            this.isOpen = true;
        }
    }
    /**
     * @hidden
     * @return {?}
     */
    addOnButtonClicked() {
        if (!this.disabled) {
            this.isOpen = !this.isOpen;
        }
    }
    /**
     * @hidden
     * @return {?}
     */
    popoverClosed() {
        this.isOpen = false;
    }
    /**
     * @hidden
     * @return {?}
     */
    getPlaceholder() {
        /** @type {?} */
        let retVal;
        if (this.displaySeconds) {
            if (this.meridian) {
                retVal = 'hh' + ':' + 'mm' + ':' + 'ss am/pm';
            }
            else {
                retVal = 'hh' + ':' + 'mm' + ':' + 'ss';
            }
        }
        else {
            if (this.meridian) {
                retVal = 'hh' + ':' + 'mm' + ' am/pm';
            }
            else {
                retVal = 'hh' + ':' + 'mm';
            }
        }
        return retVal;
    }
    /**
     * @hidden
     * @return {?}
     */
    timeFromTimeComponentChanged() {
        this.cd.detectChanges();
        this.onChange(this.time);
    }
    /**
     * @hidden
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @hidden
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @hidden
     * @param {?} isDisabled
     * @return {?}
     */
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    /**
     * @hidden
     * @param {?} time
     * @return {?}
     */
    writeValue(time) {
        if (!time) {
            return;
        }
        this.time = time;
    }
}
TimePickerComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-time-picker',
                template: "<fd-popover [(isOpen)]=\"isOpen\"\n            [triggers]=\"[]\">\n    <fd-popover-control>\n        <!--fd-input-group *ngIf=\"!meridian\" (timeInputChanged)=\"timeInputChanged($event)\" [type]=\"'time'\"\n                        [placement]=\"'after'\" [button]=\"true\" (click)=\"inputGroupClicked($event)\" [glyph]=\"'fob-watch'\"\n                        [placeholder]=\"getPlaceholder()\" [inputText]=\"getFormattedTime()\" [disabled]=\"disabled\"\n                        (addOnButtonClicked)=\"addOnButtonClicked($event)\"></fd-input-group>\n        <fd-input-group *ngIf=\"meridian\" (timeInputChanged)=\"timeInputChanged($event)\" [type]=\"'time'\"\n                        [placement]=\"'after'\" [button]=\"true\" (click)=\"inputGroupClicked($event)\" [glyph]=\"'fob-watch'\"\n                        [placeholder]=\"getPlaceholder()\" [inputText]=\"getFormattedTime()\" [disabled]=\"disabled\"\n                        (addOnButtonClicked)=\"addOnButtonClicked($event)\"></fd-input-group-->\n        <div class=\"fd-input-group fd-input-group--after\"\n             [ngClass]=\"{'fd-input-group--compact' : compact}\">\n            <input [value]=\"getFormattedTime()\"\n                   (keyup)=\"timeInputChanged($event.currentTarget.value)\"\n                   (focus)=\"onFocusHandler()\"\n                   (click)=\"inputGroupClicked($event)\"\n                   [disabled]=\"disabled\"\n                   type=\"text\"\n                   [ngClass]=\"{ 'fd-input--compact': compact, 'is-invalid': isInvalidTimeInput && validate }\"\n                   [placeholder]=\"placeholder\"\n                   [attr.aria-label]=\"timePickerInputLabel\">\n            <span class=\"fd-input-group__addon fd-input-group__addon--button fd-input-group__addon--after\">\n          <button [disabled]=\"disabled\" type=\"button\"\n                  [ngClass]=\"{ 'fd-button--compact' : compact }\" (click)=\"addOnButtonClicked()\"\n                  class=\"fd-button--icon fd-button--light sap-icon--fob-watch\"></button>\n        </span>\n        </div>\n    </fd-popover-control>\n    <fd-popover-body *ngIf=\"displaySeconds || displayMinutes || displayHours\">\n        <fd-time [disabled]=\"disabled\"\n                 [meridian]=\"meridian\"\n                 [(ngModel)]=\"time\"\n                 (ngModelChange)=\"timeFromTimeComponentChanged()\"\n                 [spinners]=\"spinners\"\n                 [displayMinutes]=\"displayMinutes\"\n                 [displaySeconds]=\"displaySeconds\"\n                 [displayHours]=\"displayHours\"></fd-time>\n    </fd-popover-body>\n</fd-popover>\n",
                host: {
                    '(blur)': 'onTouched()',
                    class: 'fd-timepicker-custom'
                },
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => TimePickerComponent)),
                        multi: true
                    }
                ],
                encapsulation: ViewEncapsulation.None,
                styles: [".fd-timepicker-custom{display:inline-block}.fd-timepicker-custom fd-popover{display:block}.fd-timepicker-custom fd-time{width:auto}"]
            }] }
];
/** @nocollapse */
TimePickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: TimeFormatParser }
];
TimePickerComponent.propDecorators = {
    timepickerclass: [{ type: HostBinding, args: ['class.fd-time-picker',] }],
    time: [{ type: Input }],
    compact: [{ type: Input }],
    meridian: [{ type: Input }],
    disabled: [{ type: Input }],
    spinners: [{ type: Input }],
    displaySeconds: [{ type: Input }],
    displayMinutes: [{ type: Input }],
    displayHours: [{ type: Input }],
    validate: [{ type: Input }],
    timePickerInputLabel: [{ type: Input }],
    allowNull: [{ type: Input }],
    child: [{ type: ViewChild, args: [TimeComponent,] }]
};
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    TimePickerComponent.prototype.timepickerclass;
    /**
     * \@Input An object that contains three integer properties: 'hour' (ranging from 0 to 23),
     * 'minute' (ranging from 0 to 59), and 'second' (ranging from 0 to 59). This is the model the component consumes. Example:
     *
     * ```json
     * { hour: 12, minute: 0, second: 0 }
     * ```
     * @type {?}
     */
    TimePickerComponent.prototype.time;
    /**
     * \@Input Uses compact time picker.
     * @type {?}
     */
    TimePickerComponent.prototype.compact;
    /**
     * \@Input When set to true, uses the 24 hour clock (hours ranging from 0 to 23)
     * and does not display a period control.
     * @type {?}
     */
    TimePickerComponent.prototype.meridian;
    /**
     * \@Input Disables the component.
     * @type {?}
     */
    TimePickerComponent.prototype.disabled;
    /**
     * \@Input When set to false, hides the buttons that increment and decrement the corresponding input.
     * @type {?}
     */
    TimePickerComponent.prototype.spinners;
    /**
     * \@Input When set to false, hides the input for seconds.
     * @type {?}
     */
    TimePickerComponent.prototype.displaySeconds;
    /**
     * \@Input When set to false, hides the input for minutes.
     * @type {?}
     */
    TimePickerComponent.prototype.displayMinutes;
    /**
     * \@Input When set to false, hides the input for hours.
     * @type {?}
     */
    TimePickerComponent.prototype.displayHours;
    /**
     * Whether to perform visual validation on the picker input.
     * @type {?}
     */
    TimePickerComponent.prototype.validate;
    /**
     * Aria label for the time picker input.
     * @type {?}
     */
    TimePickerComponent.prototype.timePickerInputLabel;
    /**
     * Whether a null input is considered valid.
     * @type {?}
     */
    TimePickerComponent.prototype.allowNull;
    /**
     * @hidden Whether the input time is valid. Internal use.
     * @type {?}
     */
    TimePickerComponent.prototype.isInvalidTimeInput;
    /**
     * @hidden
     * @type {?}
     */
    TimePickerComponent.prototype.child;
    /**
     * @hidden
     * @type {?}
     */
    TimePickerComponent.prototype.period;
    /**
     * @hidden
     * @type {?}
     */
    TimePickerComponent.prototype.isOpen;
    /**
     * @hidden
     * @type {?}
     */
    TimePickerComponent.prototype.placeholder;
    /**
     * @hidden
     * @type {?}
     */
    TimePickerComponent.prototype.onChange;
    /**
     * @hidden
     * @type {?}
     */
    TimePickerComponent.prototype.onTouched;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.cd;
    /** @type {?} */
    TimePickerComponent.prototype.timeAdapter;
}
//# sourceMappingURL=data:application/json;base64,