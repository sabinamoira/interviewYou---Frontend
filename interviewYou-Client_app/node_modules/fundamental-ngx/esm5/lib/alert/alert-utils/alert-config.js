/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Configuration for opening an alert with the AlertService.
 */
var /**
 * Configuration for opening an alert with the AlertService.
 */
AlertConfig = /** @class */ (function () {
    function AlertConfig() {
        /**
         * Whether the alert is dismissible.
         */
        this.dismissible = true;
        /**
         * Width of the alert.
         */
        this.width = '33vw';
        /**
         * Minimum width of the alert.
         */
        this.minWidth = '300px';
        /**
         * Duration of time *in milliseconds* that the alert will be visible. Set to -1 for indefinite.
         */
        this.duration = 10000;
        /**
         * Whether the alert should stay open if the mouse is hovering over it.
         */
        this.mousePersist = false;
        /**
         * Id of the element that labels the alert.
         */
        this.ariaLabelledBy = null;
        /**
         * Aria label for the alert component element.
         */
        this.ariaLabel = null;
    }
    return AlertConfig;
}());
/**
 * Configuration for opening an alert with the AlertService.
 */
export { AlertConfig };
if (false) {
    /**
     * Whether the alert is dismissible.
     * @type {?}
     */
    AlertConfig.prototype.dismissible;
    /**
     * The type of the alert. Can be one of *warning*, *success*, *information*, *error* or null.
     * @type {?}
     */
    AlertConfig.prototype.type;
    /**
     * Id for the alert component. If omitted, a unique one is generated.
     * @type {?}
     */
    AlertConfig.prototype.id;
    /**
     * Width of the alert.
     * @type {?}
     */
    AlertConfig.prototype.width;
    /**
     * Minimum width of the alert.
     * @type {?}
     */
    AlertConfig.prototype.minWidth;
    /**
     * Data being injected into the child component or template.
     * @type {?}
     */
    AlertConfig.prototype.data;
    /**
     * Duration of time *in milliseconds* that the alert will be visible. Set to -1 for indefinite.
     * @type {?}
     */
    AlertConfig.prototype.duration;
    /**
     * Whether the alert should stay open if the mouse is hovering over it.
     * @type {?}
     */
    AlertConfig.prototype.mousePersist;
    /**
     * Id of the element that labels the alert.
     * @type {?}
     */
    AlertConfig.prototype.ariaLabelledBy;
    /**
     * Aria label for the alert component element.
     * @type {?}
     */
    AlertConfig.prototype.ariaLabel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQtY29uZmlnLmpzIiwic291cmNlUm9vdCI6Im5nOi8vZnVuZGFtZW50YWwtbmd4LyIsInNvdXJjZXMiOlsibGliL2FsZXJ0L2FsZXJ0LXV0aWxzL2FsZXJ0LWNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUE7Ozs7SUFBQTs7OztRQUdJLGdCQUFXLEdBQWEsSUFBSSxDQUFDOzs7O1FBUzdCLFVBQUssR0FBWSxNQUFNLENBQUM7Ozs7UUFHeEIsYUFBUSxHQUFZLE9BQU8sQ0FBQzs7OztRQU01QixhQUFRLEdBQVksS0FBSyxDQUFDOzs7O1FBRzFCLGlCQUFZLEdBQWEsS0FBSyxDQUFDOzs7O1FBRy9CLG1CQUFjLEdBQVksSUFBSSxDQUFDOzs7O1FBRy9CLGNBQVMsR0FBWSxJQUFJLENBQUM7SUFDOUIsQ0FBQztJQUFELGtCQUFDO0FBQUQsQ0FBQyxBQS9CRCxJQStCQzs7Ozs7Ozs7OztJQTVCRyxrQ0FBNkI7Ozs7O0lBRzdCLDJCQUFjOzs7OztJQUdkLHlCQUFZOzs7OztJQUdaLDRCQUF3Qjs7Ozs7SUFHeEIsK0JBQTRCOzs7OztJQUc1QiwyQkFBVzs7Ozs7SUFHWCwrQkFBMEI7Ozs7O0lBRzFCLG1DQUErQjs7Ozs7SUFHL0IscUNBQStCOzs7OztJQUcvQixnQ0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogQ29uZmlndXJhdGlvbiBmb3Igb3BlbmluZyBhbiBhbGVydCB3aXRoIHRoZSBBbGVydFNlcnZpY2UuXG4gKi9cbmV4cG9ydCBjbGFzcyBBbGVydENvbmZpZyB7XG5cbiAgICAvKiogV2hldGhlciB0aGUgYWxlcnQgaXMgZGlzbWlzc2libGUuICovXG4gICAgZGlzbWlzc2libGU/OiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBUaGUgdHlwZSBvZiB0aGUgYWxlcnQuIENhbiBiZSBvbmUgb2YgKndhcm5pbmcqLCAqc3VjY2VzcyosICppbmZvcm1hdGlvbiosICplcnJvciogb3IgbnVsbC4gKi9cbiAgICB0eXBlPzogc3RyaW5nO1xuXG4gICAgLyoqIElkIGZvciB0aGUgYWxlcnQgY29tcG9uZW50LiBJZiBvbWl0dGVkLCBhIHVuaXF1ZSBvbmUgaXMgZ2VuZXJhdGVkLiAqL1xuICAgIGlkPzogc3RyaW5nO1xuXG4gICAgLyoqIFdpZHRoIG9mIHRoZSBhbGVydC4gKi9cbiAgICB3aWR0aD86IHN0cmluZyA9ICczM3Z3JztcblxuICAgIC8qKiBNaW5pbXVtIHdpZHRoIG9mIHRoZSBhbGVydC4gKi9cbiAgICBtaW5XaWR0aD86IHN0cmluZyA9ICczMDBweCc7XG5cbiAgICAvKiogRGF0YSBiZWluZyBpbmplY3RlZCBpbnRvIHRoZSBjaGlsZCBjb21wb25lbnQgb3IgdGVtcGxhdGUuICovXG4gICAgZGF0YT86IGFueTtcblxuICAgIC8qKiBEdXJhdGlvbiBvZiB0aW1lICppbiBtaWxsaXNlY29uZHMqIHRoYXQgdGhlIGFsZXJ0IHdpbGwgYmUgdmlzaWJsZS4gU2V0IHRvIC0xIGZvciBpbmRlZmluaXRlLiAqL1xuICAgIGR1cmF0aW9uPzogbnVtYmVyID0gMTAwMDA7XG5cbiAgICAvKiogV2hldGhlciB0aGUgYWxlcnQgc2hvdWxkIHN0YXkgb3BlbiBpZiB0aGUgbW91c2UgaXMgaG92ZXJpbmcgb3ZlciBpdC4gKi9cbiAgICBtb3VzZVBlcnNpc3Q/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKiogSWQgb2YgdGhlIGVsZW1lbnQgdGhhdCBsYWJlbHMgdGhlIGFsZXJ0LiAqL1xuICAgIGFyaWFMYWJlbGxlZEJ5Pzogc3RyaW5nID0gbnVsbDtcblxuICAgIC8qKiBBcmlhIGxhYmVsIGZvciB0aGUgYWxlcnQgY29tcG9uZW50IGVsZW1lbnQuICovXG4gICAgYXJpYUxhYmVsPzogc3RyaW5nID0gbnVsbDtcbn1cbiJdfQ==