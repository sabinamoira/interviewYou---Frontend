/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Provides i18n support for labels inside the time component.
 */
var TimeI18nLabels = /** @class */ (function () {
    function TimeI18nLabels() {
        /**
         * Aria label for the 'increase hours' button
         */
        this.increaseHoursLabel = 'Increase hours';
        /**
         * Aria label for the 'hours' input
         */
        this.hoursLabel = 'Hours';
        /**
         * Aria label for the 'decrease hours' button
         */
        this.decreaseHoursLabel = 'Decrease hours';
        /**
         * Aria label for the 'increase minutes' button
         */
        this.increaseMinutesLabel = 'Increase minutes';
        /**
         * Aria label for the 'minutes' input
         */
        this.minutesLabel = 'Minutes';
        /**
         * Aria label for the 'decrease minutes' button
         */
        this.decreaseMinutesLabel = 'Decrease minutes';
        /**
         * Aria label for the 'increase seconds' button
         */
        this.increaseSecondsLabel = 'Increase seconds';
        /**
         * Aria label for the 'seconds' input
         */
        this.secondsLabel = 'Seconds';
        /**
         * Aria label for the 'decrease seconds' button
         */
        this.decreaseSecondsLabel = 'Decrease seconds';
        /**
         * Aria label for the 'increase period' button
         */
        this.increasePeriodLabel = 'Increase period';
        /**
         * Aria label for the 'period' input
         */
        this.periodLabel = 'Period';
        /**
         * Aria label for the 'decrease period' button
         */
        this.decreasePeriodLabel = 'Decrease period';
    }
    TimeI18nLabels.decorators = [
        { type: Injectable, args: [{ providedIn: 'root' },] }
    ];
    /** @nocollapse */ TimeI18nLabels.ngInjectableDef = i0.defineInjectable({ factory: function TimeI18nLabels_Factory() { return new TimeI18nLabels(); }, token: TimeI18nLabels, providedIn: "root" });
    return TimeI18nLabels;
}());
export { TimeI18nLabels };
if (false) {
    /**
     * Aria label for the 'increase hours' button
     * @type {?}
     */
    TimeI18nLabels.prototype.increaseHoursLabel;
    /**
     * Aria label for the 'hours' input
     * @type {?}
     */
    TimeI18nLabels.prototype.hoursLabel;
    /**
     * Aria label for the 'decrease hours' button
     * @type {?}
     */
    TimeI18nLabels.prototype.decreaseHoursLabel;
    /**
     * Aria label for the 'increase minutes' button
     * @type {?}
     */
    TimeI18nLabels.prototype.increaseMinutesLabel;
    /**
     * Aria label for the 'minutes' input
     * @type {?}
     */
    TimeI18nLabels.prototype.minutesLabel;
    /**
     * Aria label for the 'decrease minutes' button
     * @type {?}
     */
    TimeI18nLabels.prototype.decreaseMinutesLabel;
    /**
     * Aria label for the 'increase seconds' button
     * @type {?}
     */
    TimeI18nLabels.prototype.increaseSecondsLabel;
    /**
     * Aria label for the 'seconds' input
     * @type {?}
     */
    TimeI18nLabels.prototype.secondsLabel;
    /**
     * Aria label for the 'decrease seconds' button
     * @type {?}
     */
    TimeI18nLabels.prototype.decreaseSecondsLabel;
    /**
     * Aria label for the 'increase period' button
     * @type {?}
     */
    TimeI18nLabels.prototype.increasePeriodLabel;
    /**
     * Aria label for the 'period' input
     * @type {?}
     */
    TimeI18nLabels.prototype.periodLabel;
    /**
     * Aria label for the 'decrease period' button
     * @type {?}
     */
    TimeI18nLabels.prototype.decreasePeriodLabel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1pMThuLWxhYmVscy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2Z1bmRhbWVudGFsLW5neC8iLCJzb3VyY2VzIjpbImxpYi90aW1lL2kxOG4vdGltZS1pMThuLWxhYmVscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFLM0M7SUFBQTs7OztRQUlJLHVCQUFrQixHQUFXLGdCQUFnQixDQUFDOzs7O1FBRzlDLGVBQVUsR0FBVyxPQUFPLENBQUM7Ozs7UUFHN0IsdUJBQWtCLEdBQVcsZ0JBQWdCLENBQUM7Ozs7UUFHOUMseUJBQW9CLEdBQVcsa0JBQWtCLENBQUM7Ozs7UUFHbEQsaUJBQVksR0FBVyxTQUFTLENBQUM7Ozs7UUFHakMseUJBQW9CLEdBQVcsa0JBQWtCLENBQUM7Ozs7UUFHbEQseUJBQW9CLEdBQVcsa0JBQWtCLENBQUM7Ozs7UUFHbEQsaUJBQVksR0FBVyxTQUFTLENBQUM7Ozs7UUFHakMseUJBQW9CLEdBQVcsa0JBQWtCLENBQUM7Ozs7UUFHbEQsd0JBQW1CLEdBQVcsaUJBQWlCLENBQUM7Ozs7UUFHaEQsZ0JBQVcsR0FBVyxRQUFRLENBQUM7Ozs7UUFHL0Isd0JBQW1CLEdBQVcsaUJBQWlCLENBQUM7S0FFbkQ7O2dCQXZDQSxVQUFVLFNBQUMsRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFDOzs7eUJBTGhDO0NBNENDLEFBdkNELElBdUNDO1NBdENZLGNBQWM7Ozs7OztJQUd2Qiw0Q0FBOEM7Ozs7O0lBRzlDLG9DQUE2Qjs7Ozs7SUFHN0IsNENBQThDOzs7OztJQUc5Qyw4Q0FBa0Q7Ozs7O0lBR2xELHNDQUFpQzs7Ozs7SUFHakMsOENBQWtEOzs7OztJQUdsRCw4Q0FBa0Q7Ozs7O0lBR2xELHNDQUFpQzs7Ozs7SUFHakMsOENBQWtEOzs7OztJQUdsRCw2Q0FBZ0Q7Ozs7O0lBR2hELHFDQUErQjs7Ozs7SUFHL0IsNkNBQWdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIFByb3ZpZGVzIGkxOG4gc3VwcG9ydCBmb3IgbGFiZWxzIGluc2lkZSB0aGUgdGltZSBjb21wb25lbnQuXG4gKi9cbkBJbmplY3RhYmxlKHtwcm92aWRlZEluOiAncm9vdCd9KVxuZXhwb3J0IGNsYXNzIFRpbWVJMThuTGFiZWxzIHtcblxuICAgIC8qKiBBcmlhIGxhYmVsIGZvciB0aGUgJ2luY3JlYXNlIGhvdXJzJyBidXR0b24gKi9cbiAgICBpbmNyZWFzZUhvdXJzTGFiZWw6IHN0cmluZyA9ICdJbmNyZWFzZSBob3Vycyc7XG5cbiAgICAvKiogQXJpYSBsYWJlbCBmb3IgdGhlICdob3VycycgaW5wdXQgKi9cbiAgICBob3Vyc0xhYmVsOiBzdHJpbmcgPSAnSG91cnMnO1xuXG4gICAgLyoqIEFyaWEgbGFiZWwgZm9yIHRoZSAnZGVjcmVhc2UgaG91cnMnIGJ1dHRvbiAqL1xuICAgIGRlY3JlYXNlSG91cnNMYWJlbDogc3RyaW5nID0gJ0RlY3JlYXNlIGhvdXJzJztcblxuICAgIC8qKiBBcmlhIGxhYmVsIGZvciB0aGUgJ2luY3JlYXNlIG1pbnV0ZXMnIGJ1dHRvbiAqL1xuICAgIGluY3JlYXNlTWludXRlc0xhYmVsOiBzdHJpbmcgPSAnSW5jcmVhc2UgbWludXRlcyc7XG5cbiAgICAvKiogQXJpYSBsYWJlbCBmb3IgdGhlICdtaW51dGVzJyBpbnB1dCAqL1xuICAgIG1pbnV0ZXNMYWJlbDogc3RyaW5nID0gJ01pbnV0ZXMnO1xuXG4gICAgLyoqIEFyaWEgbGFiZWwgZm9yIHRoZSAnZGVjcmVhc2UgbWludXRlcycgYnV0dG9uICovXG4gICAgZGVjcmVhc2VNaW51dGVzTGFiZWw6IHN0cmluZyA9ICdEZWNyZWFzZSBtaW51dGVzJztcblxuICAgIC8qKiBBcmlhIGxhYmVsIGZvciB0aGUgJ2luY3JlYXNlIHNlY29uZHMnIGJ1dHRvbiAqL1xuICAgIGluY3JlYXNlU2Vjb25kc0xhYmVsOiBzdHJpbmcgPSAnSW5jcmVhc2Ugc2Vjb25kcyc7XG5cbiAgICAvKiogQXJpYSBsYWJlbCBmb3IgdGhlICdzZWNvbmRzJyBpbnB1dCAqL1xuICAgIHNlY29uZHNMYWJlbDogc3RyaW5nID0gJ1NlY29uZHMnO1xuXG4gICAgLyoqIEFyaWEgbGFiZWwgZm9yIHRoZSAnZGVjcmVhc2Ugc2Vjb25kcycgYnV0dG9uICovXG4gICAgZGVjcmVhc2VTZWNvbmRzTGFiZWw6IHN0cmluZyA9ICdEZWNyZWFzZSBzZWNvbmRzJztcblxuICAgIC8qKiBBcmlhIGxhYmVsIGZvciB0aGUgJ2luY3JlYXNlIHBlcmlvZCcgYnV0dG9uICovXG4gICAgaW5jcmVhc2VQZXJpb2RMYWJlbDogc3RyaW5nID0gJ0luY3JlYXNlIHBlcmlvZCc7XG5cbiAgICAvKiogQXJpYSBsYWJlbCBmb3IgdGhlICdwZXJpb2QnIGlucHV0ICovXG4gICAgcGVyaW9kTGFiZWw6IHN0cmluZyA9ICdQZXJpb2QnO1xuXG4gICAgLyoqIEFyaWEgbGFiZWwgZm9yIHRoZSAnZGVjcmVhc2UgcGVyaW9kJyBidXR0b24gKi9cbiAgICBkZWNyZWFzZVBlcmlvZExhYmVsOiBzdHJpbmcgPSAnRGVjcmVhc2UgcGVyaW9kJztcblxufVxuIl19