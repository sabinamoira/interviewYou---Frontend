/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Provides i18n support for labels inside the calendar component.
 */
var CalendarI18nLabels = /** @class */ (function () {
    function CalendarI18nLabels() {
        // This will be needed when we use OnPush change detection.
        // readonly labelsChange: Subject<void> = new Subject<void>();
        /**
         * Year selection aria label. Used on the button to navigate to the years view.
         */
        this.yearSelectionLabel = 'Year selection';
        /**
         * Previous year aria label. Used on the button to switch to a previous year in the years view.
         */
        this.previousYearLabel = 'Previous year';
        /**
         * Next year aria label. Used on the button to switch to a next year in the years view.
         */
        this.nextYearLabel = 'Next year';
        /**
         * Month selection aria label. Used on the button to navigate to the months view.
         */
        this.monthSelectionLabel = 'Month selection';
        /**
         * Previous month aria label. Used on the button to switch to a previous month in the months view.
         */
        this.previousMonthLabel = 'Previous month';
        /**
         * Next month aria label. Used on the button to switch to a next month in the months view.
         */
        this.nextMonthLabel = 'Next month';
    }
    CalendarI18nLabels.decorators = [
        { type: Injectable, args: [{ providedIn: 'root' },] }
    ];
    /** @nocollapse */ CalendarI18nLabels.ngInjectableDef = i0.defineInjectable({ factory: function CalendarI18nLabels_Factory() { return new CalendarI18nLabels(); }, token: CalendarI18nLabels, providedIn: "root" });
    return CalendarI18nLabels;
}());
export { CalendarI18nLabels };
if (false) {
    /**
     * Year selection aria label. Used on the button to navigate to the years view.
     * @type {?}
     */
    CalendarI18nLabels.prototype.yearSelectionLabel;
    /**
     * Previous year aria label. Used on the button to switch to a previous year in the years view.
     * @type {?}
     */
    CalendarI18nLabels.prototype.previousYearLabel;
    /**
     * Next year aria label. Used on the button to switch to a next year in the years view.
     * @type {?}
     */
    CalendarI18nLabels.prototype.nextYearLabel;
    /**
     * Month selection aria label. Used on the button to navigate to the months view.
     * @type {?}
     */
    CalendarI18nLabels.prototype.monthSelectionLabel;
    /**
     * Previous month aria label. Used on the button to switch to a previous month in the months view.
     * @type {?}
     */
    CalendarI18nLabels.prototype.previousMonthLabel;
    /**
     * Next month aria label. Used on the button to switch to a next month in the months view.
     * @type {?}
     */
    CalendarI18nLabels.prototype.nextMonthLabel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItaTE4bi1sYWJlbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9mdW5kYW1lbnRhbC1uZ3gvIiwic291cmNlcyI6WyJsaWIvY2FsZW5kYXIvaTE4bi9jYWxlbmRhci1pMThuLWxhYmVscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFLM0M7SUFBQTs7Ozs7O1FBT0ksdUJBQWtCLEdBQVcsZ0JBQWdCLENBQUM7Ozs7UUFHOUMsc0JBQWlCLEdBQVcsZUFBZSxDQUFDOzs7O1FBRzVDLGtCQUFhLEdBQVcsV0FBVyxDQUFDOzs7O1FBR3BDLHdCQUFtQixHQUFXLGlCQUFpQixDQUFDOzs7O1FBR2hELHVCQUFrQixHQUFXLGdCQUFnQixDQUFDOzs7O1FBRzlDLG1CQUFjLEdBQVcsWUFBWSxDQUFDO0tBRXpDOztnQkF4QkEsVUFBVSxTQUFDLEVBQUMsVUFBVSxFQUFFLE1BQU0sRUFBQzs7OzZCQUxoQztDQTZCQyxBQXhCRCxJQXdCQztTQXZCWSxrQkFBa0I7Ozs7OztJQU0zQixnREFBOEM7Ozs7O0lBRzlDLCtDQUE0Qzs7Ozs7SUFHNUMsMkNBQW9DOzs7OztJQUdwQyxpREFBZ0Q7Ozs7O0lBR2hELGdEQUE4Qzs7Ozs7SUFHOUMsNENBQXNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIFByb3ZpZGVzIGkxOG4gc3VwcG9ydCBmb3IgbGFiZWxzIGluc2lkZSB0aGUgY2FsZW5kYXIgY29tcG9uZW50LlxuICovXG5ASW5qZWN0YWJsZSh7cHJvdmlkZWRJbjogJ3Jvb3QnfSlcbmV4cG9ydCBjbGFzcyBDYWxlbmRhckkxOG5MYWJlbHMge1xuXG4gICAgLy8gVGhpcyB3aWxsIGJlIG5lZWRlZCB3aGVuIHdlIHVzZSBPblB1c2ggY2hhbmdlIGRldGVjdGlvbi5cbiAgICAvLyByZWFkb25seSBsYWJlbHNDaGFuZ2U6IFN1YmplY3Q8dm9pZD4gPSBuZXcgU3ViamVjdDx2b2lkPigpO1xuXG4gICAgLyoqIFllYXIgc2VsZWN0aW9uIGFyaWEgbGFiZWwuIFVzZWQgb24gdGhlIGJ1dHRvbiB0byBuYXZpZ2F0ZSB0byB0aGUgeWVhcnMgdmlldy4gKi9cbiAgICB5ZWFyU2VsZWN0aW9uTGFiZWw6IHN0cmluZyA9ICdZZWFyIHNlbGVjdGlvbic7XG5cbiAgICAvKiogUHJldmlvdXMgeWVhciBhcmlhIGxhYmVsLiBVc2VkIG9uIHRoZSBidXR0b24gdG8gc3dpdGNoIHRvIGEgcHJldmlvdXMgeWVhciBpbiB0aGUgeWVhcnMgdmlldy4gKi9cbiAgICBwcmV2aW91c1llYXJMYWJlbDogc3RyaW5nID0gJ1ByZXZpb3VzIHllYXInO1xuXG4gICAgLyoqIE5leHQgeWVhciBhcmlhIGxhYmVsLiBVc2VkIG9uIHRoZSBidXR0b24gdG8gc3dpdGNoIHRvIGEgbmV4dCB5ZWFyIGluIHRoZSB5ZWFycyB2aWV3LiAqL1xuICAgIG5leHRZZWFyTGFiZWw6IHN0cmluZyA9ICdOZXh0IHllYXInO1xuXG4gICAgLyoqIE1vbnRoIHNlbGVjdGlvbiBhcmlhIGxhYmVsLiBVc2VkIG9uIHRoZSBidXR0b24gdG8gbmF2aWdhdGUgdG8gdGhlIG1vbnRocyB2aWV3LiAqL1xuICAgIG1vbnRoU2VsZWN0aW9uTGFiZWw6IHN0cmluZyA9ICdNb250aCBzZWxlY3Rpb24nO1xuXG4gICAgLyoqIFByZXZpb3VzIG1vbnRoIGFyaWEgbGFiZWwuIFVzZWQgb24gdGhlIGJ1dHRvbiB0byBzd2l0Y2ggdG8gYSBwcmV2aW91cyBtb250aCBpbiB0aGUgbW9udGhzIHZpZXcuICovXG4gICAgcHJldmlvdXNNb250aExhYmVsOiBzdHJpbmcgPSAnUHJldmlvdXMgbW9udGgnO1xuXG4gICAgLyoqIE5leHQgbW9udGggYXJpYSBsYWJlbC4gVXNlZCBvbiB0aGUgYnV0dG9uIHRvIHN3aXRjaCB0byBhIG5leHQgbW9udGggaW4gdGhlIG1vbnRocyB2aWV3LiAqL1xuICAgIG5leHRNb250aExhYmVsOiBzdHJpbmcgPSAnTmV4dCBtb250aCc7XG5cbn1cbiJdfQ==